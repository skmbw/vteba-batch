<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:spring="http://www.infinispan.org/schemas/spring" 
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd http://www.infinispan.org/schemas/spring http://www.infinispan.org/schemas/infinispan-spring-5.0.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	default-autowire="byName">
	
	<bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator">
		<property name="jobRepository" ref="jobRepository"/>	
		<property name="jobLauncher" ref="jobLauncher"/>
		<property name="jobExplorer" ref="jobExplorer"/>
		<property name="jobRegistry" ref="jobRegistry"/>
	</bean>
		
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor" ref="taskExecutor" />
	</bean>
	
	<bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
		<property name="dataSource" ref="tiantianDataSource" />
	</bean>
	
	<bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
  	</bean>
	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="tiantianDataSource"/>
		<property name="transactionManager" ref="transactionManager"/>
	</bean>

	<!-- 1 -->
	<batch:step id="userInitStep">
		<!-- taskExecutor，是用来重复执行的，防止任务不成功 task-executor="taskExecutor" -->
		<!-- taskExecutor非空的情况下 会默认执行重复策略 -->
		<batch:tasklet ref="userTasklet" />
	</batch:step>

	<bean id="userItemReader" class="com.vteba.batch.user.MyBatisPagingItemReader" scope="step">
	    <property name="sqlSessionFactory" ref="tiantianSqlSessionFactory"/>
	    <property name="queryId" value="com.vteba.batch.user.dao.UserDao.pagedList"/>
 		<property name="pageSize" value="3" />
	</bean>
	
	<bean id="userItemWriter" class="com.vteba.batch.user.MyBatisItemWriter" scope="step">
	    <property name="sqlSessionFactory" ref="tiantianSqlSessionFactory"/>
	    <property name="statementId" value="com.vteba.batch.user.dao.UserDao.updateById"/>
	</bean>

	<!-- 2 -->
	<batch:step id="userProcessStep">
		<batch:tasklet>
			<batch:chunk reader="userItemReader" processor="userItemProcessor" writer="userItemWriter" commit-interval="20"></batch:chunk>
		</batch:tasklet>
	</batch:step>

<!-- 	<batch:step id="parallelStepA1"> -->
<!-- 		<batch:tasklet ref="parallelStep1" /> -->
<!-- 	</batch:step> -->
	
<!-- 	<batch:step id="parallelStepA2"> -->
<!-- 		<batch:tasklet ref="parallelStep2" /> -->
<!-- 	</batch:step> -->

	<batch:job id="userJob">
		<batch:split id="splitParallel" task-executor="taskExecutor" next="userJobStep1">
			<batch:flow>
				<batch:step id="parallelStep_1">
					<batch:tasklet ref="parallelStep1" />
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="parallelStep_2">
					<batch:tasklet ref="parallelStep2" />
				</batch:step>
			</batch:flow>
		</batch:split>
		<batch:step id="userJobStep1" parent="userInitStep" next="userJobStep2" />
		<batch:step id="userJobStep2" parent="userProcessStep" />
	</batch:job>
	
	<!-- 任务调度器 -->
	<task:scheduler id="myScheduler" pool-size="10" />
	
	<!-- 线程池执行器 -->
	<task:executor id="taskExecutor" pool-size="5-10" queue-capacity="1024" />
	
	<bean id="userJobInstance" class="com.vteba.batch.launcher.BatchJobLauncher">
		<property name="job" ref="userJob" />
	</bean>
	
	<!-- Job任务配置 -->
	<task:scheduled-tasks scheduler="myScheduler">
		<task:scheduled ref="userJobInstance" method="execute" cron="0 0/1 * * * ?"/>
	</task:scheduled-tasks>
</beans>